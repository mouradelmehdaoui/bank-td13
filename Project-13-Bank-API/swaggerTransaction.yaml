swagger: "2.0"
info: Mourad El mehdaoui - OpenClassrom TD13 BankApi
title: Transactions API
version: 1.0.0
host: localhost:3001
basePath: /api/v1
schemes:
- http
paths:
/{userAccountId}/transactions/{transactionId}/:
post:
tags:
- TRANSACTION
summary: customer account details
description: retrieve customer bank account transactions
parameters:
- in: header
name: Authorization
description: "\"Bearer [JWT]"
required: true

- in: body
name: Body of the request
description: Fetch the account transactions infos
required: true
schema:
$ref: '#/definitions/Transactions'
produces:
- application/json
responses:
'200':
description: OK
schema:
$ref: '#/definitions/TransactionsResponse'

'400':
description: Bad request
'401':
description: Unauthenticated
'403':
description: Unauthorized
'404':
description: Not found

'500':
description: Internal Server Error

/{userAccountId}/transactions/{transactionId}/addTransaction:
post:
tags:
- CRUD TRANSACTION
summary: Creates transaction for the transaction
description: API to fetch a particular transaction
parameters:
- in: header
type: string
name: Authorization
description: "\"Bearer [JWT]"
required: true

- in: body
name: Body of the request
description: Fetch the infos if a particular transaction
required: true
schema:
$ref: '#/definitions/TransactionCrud'
produces:
- application/json
responses:
'200':
description: OK
schema:
$ref: '#/definitions/TransactionCrud'

'400':
description: Bad request
'401':
description: Unauthenticated
'403':
description: Unauthorized
'404':
description: Not found

'500':
description: Internal Server Error

/{userAccountId}/transactions/{transactionId}/modifyTransaction:
put:
tags:
- CRUD TRANSACTION
summary: Modify transaction infos
description: Changes the notes or the category of the transaction
parameters:
- in: header
type: string
name: Authorization
description: "\"Bearer [JWT]"
required: true

- in: body
name: Body of the request
description: Changes the notes and/or the category of the transaction
required: true
schema:
$ref: '#/definitions/TransactionCrud'
produces:
- application/json
responses:
'200':
description: OK
schema:
$ref: '#/definitions/TransactionsMessageSuccess'

/{userAccountId}/transactions/{transactionId}/deleteTransaction:
delete:
tags:
- CRUD TRANSACTION
summary: Deletes transaction infos
description: Deletes the notes or the category of the transaction
parameters:
- in: header
type: string
name: Authorization
description: "\"Bearer [JWT]"
required: true

- in: body
name: Body of the request
description: Deletes the notes and/or the category
required: true
schema:
$ref: '#/definitions/TransactionCrud'
produces:
- application/json
responses:
'200':
description: OK
schema:
$ref: '#/definitions/TransactionsMessageSuccess'

definitions:
# Get transaction by Id
Transactions:
properties:
userAccountId:
type: string
description: ID of the account
transactionId:
type: string
description: ID of the account
# Get transaction by accountId && transactionId
TransactionCrud:
properties:
userAccountId:
type: string
description: ID of the account
transactionId:
type: string
description: ID of the transaction
notes:
type: string
description: Notes of the transaction
category:
type: string
description: Category of the transaction


# retrieve transactions Api without Notes & Category
TransactionsResponse:
type: array
items:
type: object
properties:
transactionId:
type: string
description: ID of a transaction
date:
type: string
description: Date of the transaction
description:
type: string
description: Description of the transaction
amount:
type: number
description: Amount spent in the transaction
balance:
type: number
description: Account's balance after the transaction
category:
type: string
description: Category of the transaction
notes:
type: string
description: User notes of the transaction

# Message succes delete transacation by transactionid && userAccountId
TransactionsMessageSuccess:
properties:
message:
type: string
description: Message of success
